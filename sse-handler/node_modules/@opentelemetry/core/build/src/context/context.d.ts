import { Span, SpanContext } from '@opentelemetry/api';
import { Context } from '@opentelemetry/context-base';
/**
 * Active span key
 */
export declare const ACTIVE_SPAN_KEY: symbol;
/**
 * Return the active span if one exists
 *
 * @param context context to get span from
 */
export declare function getActiveSpan(context: Context): Span | undefined;
/**
 * Set the active span on a context
 *
 * @param context context to use as parent
 * @param span span to set active
 */
export declare function setActiveSpan(context: Context, span: Span): Context;
/**
 * Get the extracted span context from a context
 *
 * @param context context to get span context from
 */
export declare function getExtractedSpanContext(context: Context): SpanContext | undefined;
/**
 * Set the extracted span context on a context
 *
 * @param context context to set span context on
 * @param spanContext span context to set
 */
export declare function setExtractedSpanContext(context: Context, spanContext: SpanContext): Context;
/**
 * Get the span context of the parent span if it exists,
 * or the extracted span context if there is no active
 * span.
 *
 * @param context context to get values from
 */
export declare function getParentSpanContext(context: Context): SpanContext | undefined;
//# sourceMappingURL=context.d.ts.map