"use strict";
/*
 * Copyright The OpenTelemetry Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SimpleSpanProcessor = void 0;
/**
 * An implementation of the {@link SpanProcessor} that converts the {@link Span}
 * to {@link ReadableSpan} and passes it to the configured exporter.
 *
 * Only spans that are sampled are converted.
 */
class SimpleSpanProcessor {
    constructor(_exporter) {
        this._exporter = _exporter;
        this._isShutdown = false;
    }
    forceFlush(cb = () => { }) {
        // do nothing as all spans are being exported without waiting
        setTimeout(cb, 0);
    }
    // does nothing.
    onStart(span) { }
    onEnd(span) {
        if (this._isShutdown) {
            return;
        }
        this._exporter.export([span], () => { });
    }
    shutdown(cb = () => { }) {
        if (this._isShutdown) {
            setTimeout(cb, 0);
            return;
        }
        this._isShutdown = true;
        this._exporter.shutdown();
        setTimeout(cb, 0);
    }
}
exports.SimpleSpanProcessor = SimpleSpanProcessor;
//# sourceMappingURL=SimpleSpanProcessor.js.map